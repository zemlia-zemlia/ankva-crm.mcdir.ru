<?php
/**
 */

namespace execut\yii\migration;


use execut\yii\migration\Migration;

abstract class Attacher extends Migration
{

    protected $isRefreshSchema = false;
    abstract protected function getVariations();
    public function up()
    {
        if (!$this->isHasChanges()) {
            return;
        }

        $result = parent::up(); // TODO: Change the autogenerated stub
        if ($result !== false) {
            $this->setIsNotHasChanges();
        }
    }

    protected function isHasChanges() {
        $cache = \yii::$app->cache;
        $cacheKey = $this->getCacheKey();

        if ($cache->get($cacheKey)) {
            return false;
        }

        return true;
    }

    protected function setIsNotHasChanges() {
        $cache = \yii::$app->cache;
        $cacheKey = $this->getCacheKey();
        $cache->set($cacheKey, 1);
    }

    /**
     * @return string
     */
    protected function getCacheKey()
    {
        $variations = $this->getVariations();
        $cacheKey = get_class($this);
        foreach ($variations as $variation) {
            $cacheKey .= serialize($this->$variation);
        }

        return $cacheKey;
    }
}